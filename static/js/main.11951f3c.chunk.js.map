{"version":3,"sources":["components/Navbar.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","_jsxs","className","concat","mode","children","_jsx","txtMode","href","onClick","toggleMode","Alert","alertObj","type","role","charAt","toUpperCase","slice","msg","App","_useState","useState","_useState2","_slicedToArray","alert","_useState3","_useState4","setmode","_useState5","_useState6","settxtMode","id","document","body","style","backgroundColor","boxShadow","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","React","StrictMode"],"mappings":"oOAEe,SAASA,EAAOC,GAC3B,OACMC,eAAA,OAAKC,UAAS,8CAAAC,OAAgDH,EAAMI,KAAI,mCAAkCC,SAAA,CAC1GJ,eAAA,MAAIC,UAAU,6BAA4BG,SAAA,CAC9CC,cAAA,MAAIJ,UAAU,WAAUG,SACtBC,cAAA,KAAGJ,UAAS,qBAAAC,OAAuBH,EAAMO,SAAW,eAAa,OAAOC,KAAK,IAAGH,SAAC,WAEnFC,cAAA,MAAIJ,UAAU,WAAUG,SACtBC,cAAA,KAAGJ,UAAS,cAAAC,OAAgBH,EAAMO,SAAWC,KAAK,YAAWH,SAAC,eAEhEC,cAAA,MAAIJ,UAAU,WAAUG,SACtBC,cAAA,KAAGJ,UAAS,cAAAC,OAAgBH,EAAMO,SAAWC,KAAK,SAAQH,SAAC,YAE7DC,cAAA,MAAIJ,UAAU,WAAUG,SACtBC,cAAA,KAAGJ,UAAS,cAAAC,OAAgBH,EAAMO,SAAWC,KAAK,iBAAgBH,SAAC,wBAGvEC,cAAA,UAAQJ,UAAS,8CAAAC,OAAgDH,EAAMO,QAAO,4BAAAJ,OAA2BH,EAAMO,QAAO,UAAUE,QAAST,EAAMU,WAAWL,SAAiB,SAAdL,EAAMI,KAAe,QAAQ,WAG9L,CCpBe,SAASO,EAAMX,GAC5B,OACEA,EAAMY,UAAYX,eAAA,OAAKC,UAAS,eAAAC,OAAiBH,EAAMY,SAASC,KAAI,gCAA+BC,KAAK,QAAOT,SAAA,CAC/GC,cAAA,UAAAD,SAASL,EAAMY,SAASC,KAAKE,OAAO,GAAGC,cAAchB,EAAMY,SAASC,KAAKI,MAAM,KAAY,KAAGjB,EAAMY,SAASM,MAGjH,CC0DeC,MAvDf,WACE,IAAAC,EAA0BC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAAjCI,EAAKF,EAAA,GACZG,GADsBH,EAAA,GACED,mBAAS,mBAAiBK,EAAAH,YAAAE,EAAA,GAA3CrB,EAAIsB,EAAA,GAAEC,EAAOD,EAAA,GACpBE,EAA8BP,mBAAS,QAAOQ,EAAAN,YAAAK,EAAA,GAAvCrB,EAAOsB,EAAA,GAAEC,EAAUD,EAAA,GAuB1B,OAEI5B,cADF,CACE,OAAK8B,GAAG,OAAM1B,SAAA,CACZC,cAACP,EAAM,CAACK,KAAMA,EAAMM,WAzBP,WACJ,SAATN,GACFuB,EAAQ,kBACRK,SAASC,KAAKC,MAAMC,gBAAkB,QACtCL,EAAW,UAEXH,EAAQ,QACRK,SAASC,KAAKC,MAAMC,gBAAkB,QACtCL,EAAW,SAEf,EAekDvB,QAASA,IACrDD,cAACK,EAAK,CAACC,SAAUY,IACjBlB,cAAA,OACEJ,UAAS,qBAAAC,OAAuBC,EAAI,kBACpC8B,MAAO,CACLE,UAAU,kBAADjC,OAA6B,mBAATC,EAA4B,OAAS,cAmB9E,ECpDeiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,SAAAC,GAAkD,IAA/CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,EACV,GAEJ,ECJaS,IAASC,WAAWhB,SAASiB,eAAe,SACpDC,OACH5C,cAAC6C,IAAMC,WAAU,CAAA/C,SACfC,cAACa,EAAG,OAORkB,G","file":"static/js/main.11951f3c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { a } from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n    return(\r\n          <div className={`navbar justify-content-center py-1 px-3 bg-${props.mode} d-flex justify-content-between`}>\r\n          <ul className=\"nav justify-content-center\">\r\n      <li className=\"nav-item\">\r\n        <a className={`nav-a active text-${props.txtMode}`} aria-current=\"page\" href=\"/\">Home</a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a className={`nav-a text-${props.txtMode}`} href=\"/projects\">Projects</a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a className={`nav-a text-${props.txtMode}`} href=\"/login\">Login</a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a className={`nav-a text-${props.txtMode}`} href=\"/textconverter\">Text convertor</a>\r\n      </li>\r\n    </ul>\r\n    <button className={`btn btn-light bg-transparent border border-${props.txtMode} border-1 p-2 py-0 text-${props.txtMode} nav-a`} onClick={props.toggleMode}>{(props.mode)===\"dark\"?\"Light\":\"Dark\"}</button>\r\n          </div>\r\n    );\r\n};\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    props.alertObj && <div className={`alert alert-${props.alertObj.type} alert-dismissible fade show`}role=\"alert\">\r\n    <strong>{props.alertObj.type.charAt(0).toUpperCase()+props.alertObj.type.slice(1)}</strong>: {props.alertObj.msg}\r\n  </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\n// import Carousel from \"./components/Carousel\";\n// import Form from \"./components/Form\";\n// import Projects from \"./components/Projects\";\n// import Textarea from \"./components/Textarea\";\nimport Alert from \"./components/Alert\";\n// import { BrowserRouter as Router, Routes, Route} from \"react-router-dom\";\n\n\nfunction App() {\n  const [alert, setAlert] = useState(null);\n  const [mode, setmode] = useState(\"body-secondary\");\n  const [txtMode, settxtMode] = useState(\"dark\");\n  const toggleMode = () => {\n    if (mode === \"dark\") {\n      setmode(\"body-secondary\");\n      document.body.style.backgroundColor = \"white\";\n      settxtMode(\"dark\");\n    } else {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"black\";\n      settxtMode(\"light\");\n    }\n  };\n  const showAlert = (message, type) =>{\n    setAlert(\n      {\n        msg:message,\n        type:type\n      }\n    );\n    setTimeout(()=>{\n      setAlert(null);\n    }, 2500);\n  }\n  return (\n    // <Router>\n      <div id=\"main\">\n        <Navbar mode={mode} toggleMode={toggleMode} txtMode={txtMode} />\n        <Alert alertObj={alert}/>\n        <div\n          className={`container my-5 bg-${mode} p-5 rounded-5`}\n          style={{\n            boxShadow: `.1px .1px 26px ${mode === \"body-secondary\" ? \"grey\" : \"white\"\n              }`,\n          }}\n        >\n          {/* <Routes> */}\n          {/* <Route exact path=\"/login\" element={<Form txtMode={txtMode}/>}> */}\n          {/* </Route> */}\n          {/* <Route exact path=\"/projects\" element={<Projects txtMode={txtMode} mode={mode}/>}> */}\n          {/* </Route> */}\n          {/* <Route exact  path=\"/\" element={<Carousel mode={mode} textMode={txtMode} />}> */}\n          {/* </Route> */}\n          {/* <Route exact  path=\"/textconverter\" element={<Textarea heading=\"Enter your text below :\" showAlert={showAlert} mode={mode} textMode={txtMode}/>}> */}\n          {/* </Route> */}\n        {/* </Routes> */}\n        {/* <Textarea heading=\"Enter your text below :\" showAlert={showAlert} mode={mode} textMode={txtMode}/> */}\n        </div>\n      </div>\n    /* </Router> */\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}